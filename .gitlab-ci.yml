

stages:
    - build
    - doc


##############################################################
#                                                            #
# Jobs and commands templates                                 #
#                                                            #
##############################################################


build_docs:
    image: ${CONTAINTHEDOCS_IMAGE}
    stage: build
    script:
        # create 'dist' folder because it probably not exists yet
        - mkdir -p dist
        - node scripts/schema-build.js
        # - node scripts/schema-check.js
        - node scripts/schema-to-rst.js
        - node scripts/poller-default-output-doc-gen.js
        - if [ "$CI_COMMIT_REF_NAME" = "docs-staging" ] || [ "$CI_COMMIT_REF_NAME" = "docs-latest" ]; then
        -   rm -rf docs/_templates
        - fi
        - make html
        - vale --glob='*.{md,rst}' .
        #  - make linkcheck
    tags:
        - docker-executor
    artifacts:
        name: docs
        paths:
            - docs/_build/html
        expire_in: 1 month

##############################################################
# BEGIN VIO                                                  #
##############################################################




# Publish docs to clouddocs.f5.com
publish_docs_to_production:
    image: ${CONTAINTHEDOCS_IMAGE}
    stage: doc
    environment:
        name: production
        url: https://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/latest
    only:
        # fill in desired release branch name to add deployment from a branch: currently *docs-latest*
        - docs-latest@automation-toolchain/f5-telemetry
    tags:
        - cm-official-docker-executor
    script:
        # Uncomment and set to create desired version format
        - aws s3 sync docs/_build/html s3://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/latest
        # - aws s3 cp versions.json s3://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/versions.json
        # create invalidation to clear cloudfront cache
        - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/f5-telemetry-streaming/latest
