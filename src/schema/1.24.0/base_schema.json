{
    "$id": "base_schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Telemetry Streaming",
    "description": "",
    "type": "object",
    "definitions": {
        "enable": {
            "title": "Enable",
            "description": "This property can be used to enable/disable the poller/listener" ,
            "type": "boolean"
        },
        "trace": {
            "title": "Trace",
            "description": "Enables data dumping to file. Boolean uses pre-defined file location, however value could be a string which contains path to a specific file instead" ,
            "minLength": 1,
            "type": ["boolean", "string"]
        },
        "traceConfig": {
            "title": "Trace (v2)",
            "description": "Enables data dumping to file. Boolean uses pre-defined file location, however value could be a string which contains path to a specific file instead",
            "type": "object",
            "properties": {
                "type": {
                    "title": "Trace type",
                    "description": "Trace type - output data or input data",
                    "type": "string",
                    "enum": ["output", "input"]
                },
                "path": {
                    "title": "Path to trace file",
                    "description": "Path to trace file to write data to",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": ["type"]
        },
        "traceV2": {
            "title": "Trace (v2)",
            "description": "Enables data dumping to file. Boolean uses pre-defined file location, however value could be a string which contains path to a specific file instead",
            "oneOf": [
                { "$ref": "#/definitions/traceConfig" },
                {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 2,
                    "uniqueItemProperties": ["type"],
                    "items": {
                        "allOf": [{
                            "$ref": "#/definitions/traceConfig"
                        }]
                    }
                }
            ]
        },
        "secret": {
            "title": "Passphrase (secret)",
            "description": "" ,
            "type": "object",
            "properties": {
                "class": {
                    "title": "Class",
                    "description": "Telemetry streaming secret class",
                    "type": "string",
                    "enum": [ "Secret" ],
                    "default": "Secret"
               },
                "cipherText": {
                    "title": "Cipher Text: this contains a secret to encrypt",
                    "type": "string"
                },
                "environmentVar": {
                    "title": "Environment Variable: this contains the named env var where the secret resides",
                    "type": "string",
                    "minLength": 1
                },
                "protected": {
                    "$comment": "Meta property primarily used to determine if 'cipherText' needs to be encrypted",
                    "title": "Protected",
                    "type": "string",
                    "enum": [ "plainText", "plainBase64", "SecureVault" ],
                    "default": "plainText"
                }
            },
            "oneOf": [
                { "required": [ "cipherText" ] },
                { "required": [ "environmentVar" ] }
            ],
            "f5secret": true
        },
        "username": {
            "$comment": "Common field for username to use everywhere in scheme",
            "title": "Username",
            "type": "string",
            "minLength": 1
        },
        "stringOrSecret": {
            "allOf": [
                {
                    "if": { "type": "string" },
                    "then": {},
                    "else": {}
                },
                {
                    "if": { "type": "object" },
                    "then": { "$ref": "base_schema.json#/definitions/secret" },
                    "else": {}
                }
            ]
        },
        "constants": {
            "title": "Constants",
            "description": "" ,
            "type": "object",
            "properties": {
                "class": {
                    "title": "Class",
                    "description": "Telemetry streaming constants class",
                    "type": "string",
                    "enum": [ "Constants" ]
               }
            },
            "additionalProperties": true
        },
        "tag": {
            "$comment": "Defaults do not get applied for $ref objects, so place defaults alongside instead.",
            "title": "Tag",
            "description": "" ,
            "type": "object",
            "properties": {
                "tenant": {
                    "title": "Tenant tag",
                    "type": "string",
                    "minLength": 1
                },
                "application": {
                    "title": "Application tag",
                    "type": "string",
                    "minLength": 1
                }
            },
            "additionalProperties": true
        },
        "match": {
            "$comment": "Defaults do not get applied for $ref objects, so place defaults alongside instead.",
            "title": "Pattern to filter data",
            "description": "",
            "type": "string"
        },
        "enableHostConnectivityCheck": {
            "$comment": "This property can be used to enable/disable the host connectivity check in configurations where this is in effect",
            "title": "Host",
            "description": "" ,
            "type": "boolean"
        },
        "allowSelfSignedCert": {
            "$comment": "This property can be used by consumers, system pollers to enable/disable SSL Cert check",
            "title": "Allow Self-Signed Certificate",
            "description": "" ,
            "type": "boolean"
        },
        "host": {
            "$comment": "This property can be used by consumers, system pollers",
            "title": "Host",
            "description": "" ,
            "type": "string",
            "minLength": 1,
            "anyOf": [
                { "format": "ipv4" },
                { "format": "ipv6" },
                { "format": "hostname" }
            ],
            "hostConnectivityCheck": true
        },
        "port": {
            "title": "Port",
            "description": "" ,
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
        },
        "protocol": {
            "title": "Protocol",
            "description": "" ,
            "type": "string",
            "enum": [ "http", "https" ]
        },
        "proxy": {
            "title": "Proxy Configuration",
            "description": "",
            "type": "object",
            "dependencies": {
                "passphrase": [ "username" ]
            },
            "required": [ "host" ],
            "properties": {
                "host": {
                    "$ref": "#/definitions/host"
                },
                "port": {
                    "default": 80,
                    "allOf": [
                        {
                            "$ref": "#/definitions/port"
                        }
                    ]
                },
                "protocol": {
                    "default": "http",
                    "allOf": [
                        {
                            "$ref": "#/definitions/protocol"
                        }
                    ]
                },
                "enableHostConnectivityCheck": {
                    "$ref": "#/definitions/enableHostConnectivityCheck"
                },
                "allowSelfSignedCert": {
                    "$ref": "#/definitions/allowSelfSignedCert"
                },
                "username": {
                    "$ref": "#/definitions/username"
                },
                "passphrase": {
                    "$ref": "#/definitions/secret"
                }
            },
            "additionalProperties": false
        }
    },
    "properties": {
       "class": {
            "title": "Class",
            "description": "Telemetry streaming top level class",
            "type": "string",
            "enum": [ "Telemetry" ]
       },
       "schemaVersion": {
            "title": "Schema version",
            "description": "Version of ADC Declaration schema this declaration uses",
            "type": "string",
            "$comment": "IMPORTANT: In enum array, please put current schema version first, oldest-supported version last.  Keep enum array sorted most-recent-first.",
            "enum": [ "1.24.0", "1.23.0", "1.22.0", "1.21.0", "1.20.1", "1.20.0", "1.19.0", "1.18.0", "1.17.0", "1.16.0", "1.15.0", "1.14.0",  "1.13.0", "1.12.0", "1.11.0", "1.10.0", "1.9.0", "1.8.0", "1.7.0", "1.6.0", "1.5.0", "1.4.0", "1.3.0", "1.2.0", "1.1.0", "1.0.0", "0.9.0" ],
            "default": "1.24.0"
       },
       "$schema": {
            "title": "Schema",
            "description": "",
            "type": "string"
        }
    },
    "additionalProperties": {
        "$comment": "AJV does not resolve defaults inside oneOf/anyOf, so instead use allOf.  Any schema refs should also use allOf with an if/then/else on class",
        "properties": {
            "class": {
                "title": "Class",
                "type": "string",
                "enum": [
                    "Telemetry_System",
                    "Telemetry_System_Poller",
                    "Telemetry_Listener",
                    "Telemetry_Consumer",
                    "Telemetry_Pull_Consumer",
                    "Telemetry_iHealth_Poller",
                    "Telemetry_Endpoints",
                    "Telemetry_Namespace",
                    "Controls",
                    "Shared"
                ]
            }
        },    
        "allOf": [
            {
                "$ref": "system_schema.json#"
            },
            {
                "$ref": "system_poller_schema.json#"
            },
            {
                "$ref": "listener_schema.json#"
            },
            {
                "$ref": "consumer_schema.json#"
            },
            {
                "$ref": "pull_consumer_schema.json#"
            },
            {
                "$ref": "ihealth_poller_schema.json#"
            },
            {
                "$ref": "endpoints_schema.json#"
            },
            {
                "$ref": "controls_schema.json#"
            },
            {
                "$ref": "shared_schema.json#"
            },
            {
                "$ref": "namespace_schema.json#"
            }
        ]
    },
    "required": [
        "class"
    ]
}